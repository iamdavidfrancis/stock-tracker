{"version":3,"sources":["components/About.tsx","components/StockChart.js","components/Stocks.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["About","react_default","a","createElement","Component","Chart","calculateTicks","data","tick","Math","floor","length","tickValues","j","push","x","_this$props","this","props","isUp","es","xType","height","title","style","stroke","React","apiKey","Stocks","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","stocks","getUrl","concat","join","renderMarketCap","marketCap","inBillions","toFixed","updateStocks","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","forEach","val","stock","quote","buildStockChartModel","chart","sort","b","setState","lastUpdateTime","Date","stop","convertMinute","minute","filter","volume","map","idx","arr","y","average","state","interval","undefined","_this2","setInterval","clearInterval","_this3","classes","_this$state","className","cardGrid","Grid_default","container","spacing","item","key","symbol","sm","md","lg","Card_default","card","CardHeader_default","cardHeader","subheader","companyName","subheaderTypographyProps","align","stockChart","StockChart_Chart","change","Typography_default","variant","lastUpdate","toLocaleString","withStyles","theme","padding","unit","display","flexDirection","flexWrap","justifyContent","cardContent","heading","flexBasis","paddingLeft","paddingRight","marginTop","App","BrowserRouter","root","CssBaseline_default","AppBar_default","position","Toolbar_default","color","grow","Button_default","component","Link","assign","to","layout","Switch","Route","exact","path","footer","href","flexGrow","width","margin","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.caeedce9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        A simple stock market app for viewing tech stocks by market cap.\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport {\r\n  HorizontalGridLines,\r\n  VerticalGridLines,\r\n  XAxis,\r\n  YAxis,\r\n  LineSeries,\r\n  FlexibleWidthXYPlot,\r\n} from 'react-vis';\r\nexport default class Chart extends React.Component {\r\n  render() {\r\n    const {data, isUp} = this.props;\r\n\r\n    return (\r\n      <FlexibleWidthXYPlot\r\n        xType=\"ordinal\"\r\n        height={250}>\r\n        <VerticalGridLines tickValues={this.calculateTicks(data)} />\r\n        <HorizontalGridLines />\r\n        <XAxis \r\n          title=\"Time\"\r\n          tickValues={this.calculateTicks(data)}\r\n          style={{\r\n            // text: {stroke: 'none', display: 'none'}\r\n          }} />\r\n        <YAxis title=\"Stock Price\" />\r\n        <LineSeries \r\n          data={data}\r\n          style={{stroke: isUp ? 'green' : 'red'}}\r\n          />\r\n      </FlexibleWidthXYPlot>\r\n    )\r\n  }\r\n\r\n  calculateTicks = (data) => {\r\n    const tick = Math.floor(data.length / 10);\r\n    const tickValues = [];\r\n    for (var j = 0; j < data.length; j += tick) {\r\n      tickValues.push(data[j].x);\r\n    }\r\n\r\n    return tickValues;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StockChart from './StockChart';\r\n\r\nconst apiKey = \"pk_272f775f844a4aeba72a4679fd85a24c\";\r\n\r\nconst styles = (theme: any) => ({\r\n  cardGrid: {\r\n    padding: `${theme.spacing.unit * 1}px 0`,\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row' as any,\r\n    flexWrap: \"wrap\" as any,\r\n    justifyContent: 'space-between' as any,\r\n  },\r\n  cardHeader: {\r\n    // paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    // flexGrow: 1,\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  heading: {\r\n    display: 'inline-block',\r\n  },\r\n  stockChart: {\r\n    flexBasis: \"100%\",\r\n    paddingLeft: `${theme.spacing.unit}px`,\r\n    paddingRight: `${theme.spacing.unit}px`,\r\n  },\r\n  lastUpdate: {\r\n    marginTop: `${theme.spacing.unit * 1}px`,\r\n  }\r\n});\r\n\r\ninterface IStockState {\r\n  stocks: Array<IStock>;\r\n  lastUpdateTime: Date;\r\n  interval?: NodeJS.Timeout;\r\n}\r\n\r\ninterface IStock {\r\n  symbol: string;\r\n  companyName: string;\r\n  change: number;\r\n  changePercent: number;\r\n  delayedPrice: number;\r\n  marketCap: number;\r\n  chart: Array<IChartData>;\r\n}\r\n\r\ninterface IChartResponseData {\r\n  minute: string;\r\n  average: number;\r\n  volume: number;\r\n}\r\n\r\ninterface IChartData {\r\n  x: number | string;\r\n  y: number;\r\n}\r\n\r\ninterface IStockResponse {\r\n  [symbol: string] : {\r\n    quote : IStock,\r\n    chart: Array<IChartResponseData>,\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Stocks extends Component<any, IStockState> {\r\n\r\n  private stocks = [\"AAPL\",\"MSFT\",\"AMZN\",\"GOOGL\"];\r\n  private getUrl = `https://cloud.iexapis.com/stable/stock/market/batch?symbols=${this.stocks.join(',')}&types=quote,chart&range=1d&chartInterval=5&token=${apiKey}`;\r\n  \r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      stocks: [],\r\n      lastUpdateTime: new Date(),\r\n      interval: undefined\r\n    };\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    const response = await axios.get<IStockResponse>(this.getUrl);\r\n    \r\n    let stocks: Array<IStock> = [];\r\n    this.stocks.forEach((val) => {\r\n      const stock = response.data[val].quote;\r\n\r\n      this.buildStockChartModel(stock, response.data[val].chart);\r\n\r\n      stocks.push(stock);\r\n    });\r\n\r\n    stocks = stocks.sort((a, b) => b.marketCap - a.marketCap);\r\n\r\n    const interval = setInterval(this.updateStocks, 1000 * 30);\r\n\r\n    this.setState({stocks, lastUpdateTime: new Date(), interval});\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    const { interval } = this.state;\r\n    if (interval) {\r\n      clearInterval(interval);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { classes } = this.props;\r\n    const { stocks, lastUpdateTime } = this.state;\r\n\r\n    return (\r\n      <div className={classes.cardGrid}>\r\n        <Grid container spacing={40}>\r\n          {stocks.map(stock => (\r\n            <Grid item key={stock.symbol} sm={6} md={3} lg={3}>\r\n              <Card className={classes.card}>\r\n                <CardHeader className={classes.cardHeader} title={stock.symbol} subheader={stock.companyName} />\r\n                <CardHeader className={classes.marketCap} title={this.renderMarketCap(stock.marketCap)} subheader=\"Market Cap\" subheaderTypographyProps={{align:\"right\"}} />\r\n                {/* <CardContent className={classes.cardContent}>\r\n                  <Typography component=\"h5\" variant=\"h5\" className={classes.heading}>\r\n                    Market Cap\r\n                  </Typography>\r\n                </CardContent> */}\r\n                {stock.chart && (\r\n                  <div className={classes.stockChart}>\r\n                    <StockChart data={stock.chart} isUp={stock.change > 0}/>\r\n                  </div>\r\n                )}\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Typography variant=\"caption\" className={classes.lastUpdate}>\r\n          Last Updated: {lastUpdateTime.toLocaleString()}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderMarketCap = (marketCap: number) => {\r\n    const inBillions = (marketCap / 1e9).toFixed(2);\r\n    return `$${inBillions}B`;\r\n  };\r\n\r\n  private updateStocks = async () => {\r\n    const response = await axios.get<IStockResponse>(this.getUrl);\r\n    \r\n    let stocks: Array<IStock> = [];\r\n    this.stocks.forEach((val) => {\r\n      const stock = response.data[val].quote;\r\n\r\n      this.buildStockChartModel(stock, response.data[val].chart);\r\n\r\n      stocks.push(stock);\r\n    });\r\n\r\n    stocks = stocks.sort((a, b) => b.marketCap - a.marketCap);\r\n\r\n    this.setState({stocks, lastUpdateTime: new Date()});\r\n  }\r\n\r\n  private convertMinute = (minute: string) => {\r\n    return minute;\r\n    // const time = minute.split(':');\r\n    // return parseInt(time[0]) * 60 + parseInt(time[1]);\r\n  }\r\n\r\n  private buildStockChartModel = (stock: IStock, chart: Array<IChartResponseData>) => {\r\n    stock.chart = chart\r\n      .filter(val => val.volume > 0)\r\n      .map((val, idx, arr) => {\r\n        return { x: val.minute, y: val.average };\r\n      });\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Stocks);\r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport './App.css';\r\nimport About from './components/About';\r\nimport Stocks from './components/Stocks';\r\n\r\nconst styles = (theme: any) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    margin: theme.spacing.unit * 3,\r\n  },\r\n  footer: {\r\n    padding: theme.spacing.unit * 6,\r\n    textAlign: \"center\" as any,\r\n  },\r\n});\r\n\r\nclass App extends Component<any, {}> {\r\n  render() {\r\n    const { classes } = this.props;\r\n    const homeLink = (props: any) => <Link to=\"/\" {...props} />;\r\n    const aboutLink = (props: any) => <Link to=\"/about\" {...props} />;\r\n\r\n    return (\r\n      <Router>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                Stocks\r\n              </Typography>\r\n              <Button component={homeLink} color=\"inherit\">Home</Button>\r\n              <Button component={aboutLink} color=\"inherit\">About</Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <main>\r\n            <div className={classes.layout}>\r\n              <Switch>\r\n                <Route exact={true} path=\"/\" component={Stocks} />\r\n                <Route exact={true} path=\"/about\" component={About} />\r\n              </Switch>\r\n            </div>\r\n          </main>\r\n          <footer className={classes.footer}>\r\n            <div>\r\n              Copyright &copy; 2018\r\n            </div>\r\n            <span className=\"iex-footer\">\r\n              Data provided for free by <a href=\"https://iextrading.com/developer\">IEX</a>. View <a href=\"https://iextrading.com/api-exhibit-a/\">IEX's Terms of Use</a>\r\n            </span>\r\n          </footer>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/react-vis/dist/style.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}